version: "3.7"

networks:
    app-network:
        driver: bridge

services:
    app:
        build: 
            context: ./
            dockerfile: Dockerfile
        image: laravel8-php-fpm-80
        container_name: app
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes: 
            - ./src:/var/www
        networks: 
            - app-network        
    
    mysql:
        image: mysql:5.7.33
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment: 
            MYSQL_DATABASE: db_name
            MYSQL_ROOT_PASSWORD: password
            MYSQL_PASSWORD: password
            MYSQL_USER: username
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes: 
            - ./mysql/data:/var/lib/mysql
        networks:
            - app-network        
    
    nginx:
        image: nginx:1.19.8-alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports: 
            - "80:80"
        volumes: 
            - ./src:/var/www
            - ./nginx/conf:/etc/nginx/conf.d
        networks: 
            - app-network
###############################################################
#       Change values of the following variables in .env
#
#       CACHE_DRIVER=redis
#       REDIS_HOST=redis
#
#       Add following variable and its value to .env file
#
#       REDIS_CLIENT=predis
###############################################################
#    redis:
#        image: redis:6.2.1-buster
#        container_name: redis
#        restart: unless-stopped
#        tty: true
#        volumes:
#            - ./redis/data:/data
#        networks:
#            - app-network
###############################################################
#    mailhog:
#        image: mailhog/mailhog:v1.0.1
#        container_name: mailhog
#        restart: unless-stopped
#        ports:
#            - 8025:8025
#        networks:
#            - app-network
